<?xml version="1.0" encoding="iso-8859-1"?>
<!--
     The FreeBSD Documentation Project
     $FreeBSD$
-->

<chapter id="filesystems">
  <chapterinfo>
    <authorgroup>
      <author>
	<firstname>Tom</firstname>
	<surname>Rhodes</surname>
	<contrib>Written by </contrib>
      </author>
    </authorgroup>
  </chapterinfo>

  <title>File Systems Support</title>

  <sect1 id="filesystems-synopsis">
    <title>Synopsis</title>

    <indexterm><primary>File Systems</primary></indexterm>
    <indexterm>
      <primary>File Systems Support</primary>
      <see>File Systems</see>
    </indexterm>

    <para>File systems are an integral part of any operating system.
      They allow users to upload and store files, provide access
      to data, and make hard drives useful.  Different operating
      systems differ in their native file system.  Traditionally, the
      native &os; file system has been the Unix File System
      <acronym>UFS</acronym> which has been modernized as
      <acronym>UFS2</acronym>.  Since &os;&nbsp;7.0, the Z File
      System <acronym>ZFS</acronym> is also available as a native file
      system.  See <xref linkend="zfs"/> for more information.</para>

    <para>In addition to its native file systems, &os; supports a
      multitude of other file systems so that data from other
      operating systems can be accessed locally, such as data stored
      on locally attached <acronym>USB</acronym> storage devices,
      flash drives, and hard disks.  This includes support for the
      &linux; Extended File System (<acronym>EXT</acronym>) and the
      &microsoft; New Technology File System
      (<acronym>NTFS</acronym>).</para>

    <para>There are different levels of &os; support for the various
      file systems.  Some require a kernel module to be loaded and
      others may require a toolset to be installed.  Some non-native
      file system support is full read-write while others are
      read-only.</para>

    <para>After reading this chapter, you will know:</para>

    <itemizedlist>
      <listitem>
	<para>The difference between native and supported file
	  systems.</para>
      </listitem>

      <listitem>
	<para>Which file systems are supported by &os;.</para>
      </listitem>

      <listitem>
	<para>How to enable, configure, access, and make use of
	  non-native file systems.</para>
      </listitem>
    </itemizedlist>

    <para>Before reading this chapter, you should:</para>

    <itemizedlist>
      <listitem>
	<para>Understand &unix; and <link
	    linkend="basics">&os; basics</link>.</para>
      </listitem>

      <listitem>
	<para>Be familiar with the basics of <link
	    linkend="kernelconfig">kernel configuration and
	    compilation</link>.</para>
      </listitem>

      <listitem>
	<para>Feel comfortable <link linkend="ports">installing
	    software</link> in &os;.</para>
      </listitem>

      <listitem>
	<para>Have some familiarity with <link
	    linkend="disks">disks</link>, storage, and device names in
	  &os;.</para>
      </listitem>
    </itemizedlist>
  </sect1>

  <sect1 id="filesystems-linux">
    <title>&linux; Filesystems</title>

    <para>This section describes some of the &linux; filesystems
      supported by &os;.</para>

    <sect2>
      <title><acronym>ext2</acronym></title>

      <para>The &man.ext2fs.5; file system kernel implementation has
	been available since &os;&nbsp;2.2.  In &os;&nbsp;8.x and
	earlier, the code is licensed under the
	<acronym>GPL</acronym>.  Since &os;&nbsp;9.0, the code has
	been rewritten and is now <acronym>BSD</acronym>
	licensed.</para>

      <para>The &man.ext2fs.5; driver allows the &os; kernel to both
	read and write to <acronym>ext2</acronym> file systems.</para>

      <para>To access an <acronym>ext2</acronym> file system, first
	load the kernel loadable module:</para>

      <screen>&prompt.root; <userinput>kldload ext2fs</userinput></screen>

      <para>Then, to mount an &man.ext2fs.5; volume located on
	<filename>/dev/ad1s1</filename>:</para>

      <screen>&prompt.root; <userinput>mount -t ext2fs /dev/ad1s1 /mnt</userinput></screen>
    </sect2>

    <sect2>
      <title>XFS</title>

      <para><acronym>XFS</acronym> was originally written by
	<acronym>SGI</acronym> for the <acronym>IRIX</acronym>
	operating system and was then ported to &linux; and
	released under the <acronym>GPL</acronym>.  See
	<ulink url="http://oss.sgi.com/projects/xfs">this page</ulink>
	for more details.  The &os; port was started by Russel
	Cattelan, &a.kan.email;, and &a.rodrigc.email;.</para>

      <para>To load <acronym>XFS</acronym> as a kernel-loadable
	module:</para>

      <screen>&prompt.root; <userinput>kldload xfs</userinput></screen>

      <para>The &man.xfs.5; driver lets the &os; kernel access XFS
	filesystems.  However, only read-only access is supported and
	writing to a volume is not possible.</para>

      <para>To mount a &man.xfs.5; volume located on
	<filename>/dev/ad1s1</filename>:</para>

      <screen>&prompt.root; <userinput>mount -t xfs /dev/ad1s1 /mnt</userinput></screen>

      <para>The <filename role="package">sysutils/xfsprogs</filename>
	port includes the <command>mkfs.xfs</command> which enables
	the creation of <acronym>XFS</acronym> filesystems, plus
	utilities for analyzing and repairing them.</para>

      <para>The <literal>-p</literal> flag to
	<command>mkfs.xfs</command> can be used to create an
	&man.xfs.5; filesystem which is populated with files and other
	metadata.  This can be used to quickly create a read-only
	filesystem which can be tested on &os;.</para>
    </sect2>

    <sect2>
      <title>ReiserFS</title>

      <para>The Reiser file system, ReiserFS, was ported to
	&os; by &a.dumbbell.email;, and has been released under the
	<acronym>GPL</acronym> .</para>

      <para>The ReiserFS driver permits the &os; kernel to access
	ReiserFS file systems and read their contents, but not
	write to them.</para>

      <para>First, the kernel-loadable module needs to be
	loaded:</para>

      <screen>&prompt.root; <userinput>kldload reiserfs</userinput></screen>

      <para>Then, to mount a ReiserFS volume located on
	<filename>/dev/ad1s1</filename>:</para>

      <screen>&prompt.root; <userinput>mount -t reiserfs /dev/ad1s1 /mnt</userinput></screen>
    </sect2>
  </sect1>

  <!--
      XXXTR: stub sections (added later, as needed, as desire,
      after I get opinions from -doc people):

      Still need to discuss native and foreign file systems.

  <sect1>
    <title>Device File System</title>
  </sect1>

  <sect1>
    <title>DOS and NTFS File Systems</title>
    <para>This is a good section for those who transfer files, using
      USB devices, from Windows to FreeBSD and vice-versa.  My camera,
      and many other cameras I have seen default to using FAT16.  There
      is (was?) a kde utility, I think called kamera, that could be used
      to access camera devices.  A section on this would be useful.</para>

    <para>XXXTR: Though!  The disks chapter, covers a bit of this and
      devfs under it's USB devices.  It leaves a lot to be desired though,
      see:
http://www.freebsd.org/doc/en_US.ISO8859-1/books/handbook/usb-disks.html
      It may be better to flesh out that section a bit more.  Add the
      word "camera" to it so that others can easily notice.</para>
  </sect1>

  <sect1>
    <title>Linux EXT File System</title>

    <para>Probably NOT as useful as the other two, but it requires
      knowledge of the existence of the tools.  Which are hidden in
      the ports collection.  Most Linux guys would probably only use
      Linux, BSD guys would be smarter and use NFS.</para>
  </sect1>

  <sect1>
    <title>HFS</title>

    <para>I think this is the file system used on Apple OSX.  There are
      tools in the ports collection, and with Apple being a big
      FreeBSD supporter and user of our technologies, surely there
      is enough cross over to cover this?</para>
  </sect1>
  -->

</chapter>
